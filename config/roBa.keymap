#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default_layer {
            bindings = <
&kp Q         &kp W         &kp E         &kp R                 &kp T                                                       &kp Y        &kp U  &kp I     &kp O     &kp P
&kp A         &kp S         &kp D         &kp F                 &kp G        &kp ESCAPE                      &kp MINUS      &kp H        &kp J  &kp K     &kp L     &kp ENTER
&mt LSHIFT Z  &kp X         &kp C         &kp V                 &kp B        &kp UNDERSCORE                  &kp EQUAL      &kp N        &kp M  &mkp MB1  &mkp MB2  &kp SLASH
&kp LCTRL     &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 1 F10  &lt 2 SPACE  &lt_to_layer_0 3 LC(SPACE)      &kp BACKSPACE  &lt 4 ENTER                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUMandFUNC {
            bindings = <
&kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5                             &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0
&kp F1           &kp F2           &kp F3           &kp F4           &kp F5           &kp F6         &kp F7      &kp F8           &kp F9           &kp F10          &kp F11          &kp F12
&trans           &none            &none            &none            &none            &kp COMMA      &kp PERIOD  &kp EQUAL        &kp PLUS         &kp MINUS        &kp ASTERISK     &kp SLASH
&trans           &trans           &trans           &trans           &trans           &trans         &trans      &trans                                                              &trans
            >;
        };

        Symbols {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp HASH  &kp DOLLAR                      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LBKT  &kp RBKT   &kp BACKSLASH
&kp AMPERSAND    &none              &none             &none     &none       &trans      &trans  &trans                &trans                 &kp PIPE  &kp COLON  &kp SEMI
&trans           &trans             &trans            &trans    &trans      &trans      &trans  &trans                &trans                 &trans    &trans     &trans
&trans           &trans             &trans            &trans    &trans      &trans      &trans  &trans                                                            &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        Bluetooth {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
